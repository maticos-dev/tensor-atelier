#!/usr/bin/env python3
"""
Test script to check if circular imports are fixed.
"""

import sys
import os

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_imports():
    """Test various imports to check for circular import issues."""
    
    print("Testing imports...")
    
    try:
        # Test core imports
        from tensoratelier.core import AtelierModule, AtelierTrainer, AtelierDataLoader, AtelierOptimizer
        print("‚úì Core imports successful")
    except ImportError as e:
        if "torch" in str(e):
            print("‚ö† Core imports failed due to missing PyTorch (expected)")
        else:
            print(f"‚úó Core imports failed: {e}")
            return False
    except Exception as e:
        print(f"‚úó Core imports failed: {e}")
        return False
    
    try:
        # Test handlers imports
        from tensoratelier.handlers import AcceleratorHandler
        print("‚úì Handlers imports successful")
    except ImportError as e:
        if "torch" in str(e):
            print("‚ö† Handlers imports failed due to missing PyTorch (expected)")
        else:
            print(f"‚úó Handlers imports failed: {e}")
            return False
    except Exception as e:
        print(f"‚úó Handlers imports failed: {e}")
        return False
    
    try:
        # Test loops imports
        from tensoratelier.loops import _FitLoop, _TrainingEpochLoop
        print("‚úì Loops imports successful")
    except ImportError as e:
        if "torch" in str(e):
            print("‚ö† Loops imports failed due to missing PyTorch (expected)")
        else:
            print(f"‚úó Loops imports failed: {e}")
            return False
    except Exception as e:
        print(f"‚úó Loops imports failed: {e}")
        return False
    
    try:
        # Test profilers imports
        from tensoratelier.profilers import BaseProfiler
        print("‚úì Profilers imports successful")
    except ImportError as e:
        if "torch" in str(e):
            print("‚ö† Profilers imports failed due to missing PyTorch (expected)")
        else:
            print(f"‚úó Profilers imports failed: {e}")
            return False
    except Exception as e:
        print(f"‚úó Profilers imports failed: {e}")
        return False
    
    try:
        # Test accelerators imports
        from tensoratelier.accelerators import BaseAccelerator
        print("‚úì Accelerators imports successful")
    except ImportError as e:
        if "torch" in str(e):
            print("‚ö† Accelerators imports failed due to missing PyTorch (expected)")
        else:
            print(f"‚úó Accelerators imports failed: {e}")
            return False
    except Exception as e:
        print(f"‚úó Accelerators imports failed: {e}")
        return False
    
    try:
        # Test utils imports
        from tensoratelier.utils.parsing import _wrap_args
        print("‚úì Utils imports successful")
    except ImportError as e:
        if "torch" in str(e):
            print("‚ö† Utils imports failed due to missing PyTorch (expected)")
        else:
            print(f"‚úó Utils imports failed: {e}")
            return False
    except Exception as e:
        print(f"‚úó Utils imports failed: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = test_imports()
    if success:
        print("\nüéâ All imports successful! Circular imports are fixed.")
    else:
        print("\n‚ùå Some imports failed. Circular imports may still exist.")
        sys.exit(1)
